{"version":3,"file":"ngx-stripe.js","sources":["ngx-stripe/lib/services/window-ref.service.ts","ngx-stripe/lib/services/document-ref.service.ts","ngx-stripe/lib/services/api-loader.service.ts","ngx-stripe/lib/interfaces/stripe.ts","ngx-stripe/lib/interfaces/sources.ts","ngx-stripe/lib/interfaces/token.ts","ngx-stripe/lib/interfaces/payment-intent.ts","ngx-stripe/lib/services/stripe-instance.class.ts","ngx-stripe/lib/services/stripe.service.ts","ngx-stripe/lib/services/stripe-factory.service.ts","ngx-stripe/lib/components/stripe-card.component.ts","ngx-stripe/lib/ngx-stripe.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class WindowRef {\n  constructor(@Inject(PLATFORM_ID) public platformId: any) {}\n\n  public getNativeWindow(): Window {\n    if (isPlatformBrowser(this.platformId)) {\n      return window;\n    }\n    return {} as Window;\n  }\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class DocumentRef {\n  constructor(@Inject(PLATFORM_ID) public platformId: any) {}\n\n  public getNativeDocument(): Document {\n    if (isPlatformBrowser(this.platformId)) {\n      return document;\n    }\n    return {} as Document;\n  }\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\n\nimport { Observable, BehaviorSubject } from 'rxjs';\n\nimport { WindowRef } from './window-ref.service';\nimport { DocumentRef } from './document-ref.service';\n\nexport interface Status {\n  loaded: boolean;\n  loading: boolean;\n  error: boolean;\n}\n\n@Injectable()\nexport class LazyStripeAPILoader {\n  public status: BehaviorSubject<Status> = new BehaviorSubject<Status>({\n    error: false,\n    loaded: false,\n    loading: false\n  });\n\n  constructor(\n    @Inject(PLATFORM_ID) public platformId: any,\n    public window: WindowRef,\n    public document: DocumentRef\n  ) {}\n\n  public asStream(): Observable<Status> {\n    this.load();\n    return this.status.asObservable();\n  }\n\n  public isReady(): boolean {\n    return this.status.getValue().loaded;\n  }\n\n  public load() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n    const status: Status = this.status.getValue();\n    if (this.window.getNativeWindow().hasOwnProperty('Stripe')) {\n      this.status.next({\n        error: false,\n        loaded: true,\n        loading: false\n      });\n    } else if (!status.loaded && !status.loading) {\n      this.status.next({\n        ...status,\n        loading: true\n      });\n\n      const script = this.document.getNativeDocument().createElement('script');\n      script.type = 'text/javascript';\n      script.async = true;\n      script.defer = true;\n      script.src = 'https://js.stripe.com/v3/';\n\n      script.onload = () => {\n        this.status.next({\n          error: false,\n          loaded: true,\n          loading: false\n        });\n      };\n\n      script.onerror = () => {\n        this.status.next({\n          error: true,\n          loaded: false,\n          loading: false\n        });\n      };\n\n      this.document.getNativeDocument().body.appendChild(script);\n    }\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { Elements, ElementsOptions } from './elements';\nimport { Element } from './element';\nimport {\n  Account,\n  AccountData,\n  BankAccount,\n  BankAccountData,\n  CardDataOptions,\n  Pii,\n  PiiData,\n  TokenResult\n} from './token';\nimport { SourceData, SourceParams, SourceResult } from './sources';\nimport { PaymentRequestOptions } from './payment-request';\nimport {\n  HandleCardPaymentOptions,\n  PaymentIntentResult,\n  ConfirmPaymentIntentOptions,\n  PaymentMethodData,\n  PaymentMethodResult\n} from './payment-intent';\nimport { CardSetupResult } from './card-setup';\n\nexport const STRIPE_PUBLISHABLE_KEY = new InjectionToken<string>(\n  'Stripe Publishable Key'\n);\nexport const STRIPE_OPTIONS = new InjectionToken<Options>('Stripe Options');\n\nexport interface StripeJS {\n  elements(options?: ElementsOptions): Elements;\n  createToken(el: Element, cardData?: CardDataOptions): Promise<TokenResult>;\n  createToken(account: Account, accountData: AccountData): Promise<TokenResult>;\n  createToken(\n    account: BankAccount,\n    bankAccountData: BankAccountData\n  ): Promise<TokenResult>;\n  createToken(pii: Pii, piiData: PiiData): Promise<TokenResult>;\n  createSource(el: Element, sourceData?: SourceData): Promise<SourceResult>;\n  createSource(sourceData: SourceData): Promise<SourceResult>;\n  retrieveSource(source: SourceParams): Promise<SourceResult>;\n  paymentRequest(options: PaymentRequestOptions): any;\n  handleCardPayment(\n    clientSecret: string,\n    cardElement: Element,\n    data?: HandleCardPaymentOptions\n  ): Promise<PaymentIntentResult>;\n  handleCardPayment(\n    clientSecret: string,\n    data?: HandleCardPaymentOptions\n  ): Promise<PaymentIntentResult>;\n  handleCardAction(clientSecret: string): Promise<PaymentIntentResult>;\n  confirmPaymentIntent(\n    clientSecret: string,\n    data?: ConfirmPaymentIntentOptions\n  ): Promise<PaymentIntentResult>;\n  createPaymentMethod(\n    type: string,\n    cardElement: Element,\n    data?: PaymentMethodData\n  ): Promise<PaymentMethodResult>;\n  handleCardSetup(\n    clientSecret: string,\n    element: Element,\n    data?: PaymentMethodData\n  ): Promise<CardSetupResult>;\n  handleCardSetup(\n    clientSecret: string,\n    data?: string | PaymentMethodData\n  ): Promise<CardSetupResult>;\n}\n\nexport interface Options {\n  stripeAccount?: string;\n}\n","import { Address, Error } from './utils';\n\nexport interface Source {\n  id: string;\n  object: 'source';\n  amount: number;\n  client_secret: string;\n  code_verification?: {\n    attempts_remaining: number;\n    status: 'pending' | 'succeded' | 'failed';\n  };\n  created: number;\n  currency: string;\n  flow: FlowTypes;\n  livemode: boolean;\n  metadata: { [key: string]: any };\n  three_d_secure: {\n    card: string;\n  };\n  owner: {\n    address: Address;\n    email: string;\n    name: string;\n    phone: string;\n    verified_address: Address;\n    verified_email: string;\n    verified_name: string;\n    verified_phone: string;\n  };\n  receiver: {\n    address: string;\n    amount_charged: number;\n    amount_received: number;\n    amount_returned: number;\n    redirect?: {\n      return_url: string;\n      status: 'pending' | 'succeeded' | 'failed';\n      url: string;\n    };\n  };\n  status: 'canceled' | 'chargeable' | 'consumed' | 'failed' | 'pending';\n  type:\n    | 'card'\n    | 'three_d_secure'\n    | 'giropay'\n    | 'sepa_bit'\n    | 'ideal'\n    | 'sofort'\n    | 'bancontact';\n  usage: UsageTypes;\n}\n\nexport type UsageTypes = 'reusable' | 'single_use';\nexport type FlowTypes = 'redirect' | 'receiver' | 'code_verification' | 'none';\n\nexport interface SourceParams {\n  id: string;\n  client_secret: string;\n}\n\nexport interface SourceData {\n  type?: string;\n  amount?: number;\n  currency?: string;\n  flow?: FlowTypes;\n  metadata?: { [key: string]: any };\n  three_d_secure?: {\n    card: string;\n  };\n  owner?: {\n    address?: Address;\n    email?: string;\n    name?: string;\n    phone?: string;\n  };\n  redirect?: {\n    [key: string]: any;\n    return_url: string;\n  };\n  token?: string;\n  usage?: UsageTypes;\n}\n\nexport function isSourceData(sourceData: any): sourceData is SourceData {\n  return 'type' in sourceData;\n}\n\nexport interface SourceResult {\n  source?: Source;\n  error?: Error;\n}\n","import { Error } from './utils';\n\nexport interface Token {\n  id: string;\n  object: 'token';\n  bank_account?: {\n    id: string;\n    country: string;\n    currency: string;\n    fingerprint: string;\n    object: 'bank_account';\n    account_holder_name: string;\n    account_holder_type: 'individual' | 'company';\n    bank_name: string;\n    last4: string;\n    routing_number: string;\n    status:\n      | 'new'\n      | 'validated'\n      | 'verified'\n      | 'verification_failded'\n      | 'errored';\n  };\n  card?: {\n    id: string;\n    country: string;\n    currency: string;\n    fingerprint: string;\n    object: 'card';\n    address_city: string;\n    address_country: string;\n    address_line1: string;\n    address_line1_check: FieldCheck;\n    address_line2: string;\n    address_state: string;\n    address_zip: string;\n    address_zip_check: FieldCheck;\n    brand: string;\n    cvc_check: FieldCheck;\n    dynamic_last4: string;\n    exp_month: number;\n    exp_year: number;\n    funding: 'credit' | 'debit' | 'prepaid' | 'unknown';\n    last4: string;\n    metadata: { [key: string]: any };\n    name: string;\n    tokenization_method: 'apple_pay' | 'android_pay';\n  };\n  client_ip: string;\n  livemode: boolean;\n  type: 'card' | 'bank_account';\n  used: boolean;\n}\n\nexport type FieldCheck = 'pass' | 'fail' | 'unavailable' | 'unchecked';\n\nexport interface CardDataOptions {\n  name?: string;\n  address_line1?: string;\n  address_line2?: string;\n  address_city?: string;\n  address_state?: string;\n  address_zip?: string;\n  address_country?: string;\n  currency?: string;\n}\n\nexport interface TokenResult {\n  token?: Token;\n  error?: Error;\n}\n\nexport type Account = 'account';\n\nexport interface Address {\n  line1: string;\n  line2?: string;\n  city: string;\n  state: string;\n  postal_code: string;\n}\n\nexport interface DateOfBirth {\n  day: number;\n  month: number;\n  year: number;\n}\n\nexport interface LegalEntity {\n  address: Address;\n  address_kana?: Address;\n  address_kanji?: Address;\n  dob?: DateOfBirth;\n  first_name: string;\n  first_name_kana?: string;\n  first_name_kanji?: string;\n  gender?: string;\n  last_name: string;\n  last_name_kana?: string;\n  last_name_kanji?: string;\n  maiden_name?: string;\n  personal_id_number?: string;\n  phone_number?: string;\n  ssn_last_4?: string;\n}\n\nexport interface IndividualEntity extends LegalEntity {\n  type: 'individual';\n}\n\nexport interface BusinessEntity extends LegalEntity {\n  type: 'company';\n  additional_owners?: LegalEntity[];\n  business_name: string;\n  business_name_kana?: string;\n  business_name_kanji?: string;\n  business_tax_id?: string;\n  business_vat_id?: string;\n  personal_address?: Address;\n  personal_address_kana?: Address;\n  personal_address_kanji?: Address;\n  tax_id_registrar?: string;\n}\n\nexport interface AccountData {\n  legal_entity?: IndividualEntity | BusinessEntity;\n  tos_shown_and_accepted?: boolean;\n}\n\nexport type BankAccount = 'bank_account';\n\nexport interface BankAccountData {\n  country: string;\n  currency: string;\n  routing_number: string;\n  account_number: string;\n  account_holder_name?: string;\n  account_holder_type?: 'individual' | 'company';\n}\n\nexport type Pii = 'pii';\n\nexport interface PiiData {\n  personal_id_number: string;\n}\n\nexport function isAccount(account: any): account is Account {\n  return account === 'account';\n}\n\nexport function isAccountData(accountData: any): accountData is AccountData {\n  return accountData.legal_entity || accountData.tos_shown_and_accepted;\n}\n\nexport function isBankAccount(account: any): account is BankAccount {\n  return account === 'bank_account';\n}\n\nexport function isBankAccountData(\n  bankAccountData: any\n): bankAccountData is BankAccountData {\n  return (\n    'country' in bankAccountData &&\n    'currency' in bankAccountData &&\n    'routing_number' in bankAccountData &&\n    'account_number' in bankAccountData &&\n    (bankAccountData.account_holder_type === 'individual' ||\n      bankAccountData.account_holder_type === 'company' ||\n      bankAccountData.account_holder_type === undefined)\n  );\n}\n\nexport function isPii(pii: any): pii is Pii {\n  return pii === 'pii';\n}\n\nexport function isPiiData(piiData: any): piiData is PiiData {\n  return 'personal_id_number' in piiData;\n}\n","import { Error, Address } from './utils';\n\nexport interface HandleCardPaymentOptions {\n  payment_method?: string;\n  payment_method_data?: {\n    billing_details?: {\n      address?: Address;\n      email?: string;\n      name?: string;\n      phone?: string;\n    };\n  };\n  shipping?: {\n    address: Address;\n    name: string;\n    carrier?: string;\n    phone?: string;\n    tracking_number?: string;\n  };\n  receipt_email?: string;\n  save_payment_method?: boolean;\n}\n\nexport function isHandleCardPaymentOptions(\n  handleCardPaymentOptions: any\n): handleCardPaymentOptions is HandleCardPaymentOptions {\n  return 'type' in handleCardPaymentOptions;\n}\n\nexport interface ConfirmPaymentIntentOptions extends HandleCardPaymentOptions {\n  return_url?: string;\n  use_stripe_sdk?: boolean;\n  source?: string;\n}\n\nexport interface PaymentIntent {\n  id: string;\n  object: string;\n  amount: number;\n  amount_capturable: number;\n  amount_received: number;\n  application: string;\n  application_fee_amount: number;\n  canceled_at: Date;\n  cancellation_reason: string;\n  capture_method: string;\n  charges: {\n    object: string;\n    data: any[];\n    has_more: boolean;\n    total_count: number;\n    url: string;\n  };\n  client_secret: string;\n  confirmation_method: string;\n  created: Date;\n  currency: string;\n  customer: string;\n  description: string;\n  last_payment_error: any; // Todo\n  livemode: boolean;\n  metadata: { [key: string]: any };\n  next_source_action: any; // Todo\n  on_behalf_of: string;\n  payment_method: string;\n  payment_method_types: string[];\n  receipt_email: string;\n  review: string;\n  shipping: {\n    address: Address;\n    carrier: string;\n    name: string;\n    phone: string;\n    tracking_number: string;\n  };\n  source: string;\n  statement_descriptor: string;\n  status: string;\n  transfer_data: any; // Todo\n  transfer_group: string;\n}\n\nexport interface PaymentIntentResult {\n  paymentIntent?: PaymentIntent;\n  error?: Error;\n}\n\nexport interface PaymentMethodData {\n  type?: string;\n  billing_details?: {\n    address?: Address;\n    email?: string;\n    name?: string;\n    phone?: string;\n  };\n  card?: {\n    exp_month?: number;\n    exp_year?: number;\n    number?: string;\n    cvc?: string;\n  };\n  metadata: { [key: string]: any };\n}\n\nexport function isPaymentMethodData(\n  paymentMethodData: any\n): paymentMethodData is PaymentMethodData {\n  return paymentMethodData && 'type' in paymentMethodData;\n}\n\nexport interface PaymentMethod {\n  id: string;\n  object: string;\n  billing_details?: {\n    address?: Address;\n    email?: string;\n    name?: string;\n    phone?: string;\n  };\n  card: {\n    brand: string;\n    checks: {\n      address_line1_check: string;\n      address_postal_code_check: string;\n      cvc_check: string;\n    };\n    country: string;\n    exp_month: number;\n    exp_year: number;\n    fingerprint: string;\n    funding: string;\n    generated_from: string;\n    last4: string;\n    three_d_secure_usage: {\n      supported: boolean;\n    };\n    wallet: string;\n  };\n  created: number;\n  customer: string;\n  livemode: boolean;\n  metadata: { [key: string]: any };\n  type: string;\n}\n\nexport interface PaymentMethodResult {\n  paymentMethod?: PaymentMethod;\n  error?: Error;\n}\n","import { BehaviorSubject, from, Observable } from 'rxjs';\nimport { filter, first, map, switchMap } from 'rxjs/operators';\n\nimport { WindowRef } from './window-ref.service';\nimport { LazyStripeAPILoader, Status } from './api-loader.service';\n\nimport { StripeJS, Options } from '../interfaces/stripe';\nimport { Element } from '../interfaces/element';\nimport { Elements, ElementsOptions } from '../interfaces/elements';\nimport {\n  SourceData,\n  SourceResult,\n  isSourceData,\n  SourceParams\n} from '../interfaces/sources';\nimport {\n  CardDataOptions,\n  TokenResult,\n  Account,\n  AccountData,\n  BankAccount,\n  BankAccountData,\n  PiiData,\n  Pii,\n  isAccount,\n  isAccountData,\n  isBankAccount,\n  isBankAccountData,\n  isPii,\n  isPiiData\n} from '../interfaces/token';\nimport { StripeServiceInterface } from './stripe-instance.interface';\nimport { PaymentRequestOptions } from '../interfaces/payment-request';\nimport {\n  HandleCardPaymentOptions,\n  PaymentIntentResult,\n  ConfirmPaymentIntentOptions,\n  PaymentMethodData,\n  PaymentMethodResult,\n  isHandleCardPaymentOptions,\n  isPaymentMethodData\n} from '../interfaces/payment-intent';\nimport { CardSetupResult } from '../interfaces/card-setup';\n\nexport class StripeInstance implements StripeServiceInterface {\n  private stripe$: BehaviorSubject<StripeJS | undefined> = new BehaviorSubject<\n    StripeJS | undefined\n  >(undefined);\n\n  constructor(\n    public loader: LazyStripeAPILoader,\n    public window: WindowRef,\n    public key: string,\n    public options?: Options\n  ) {\n    this.loader\n      .asStream()\n      .pipe(\n        filter((status: Status) => status.loaded === true),\n        first(),\n        map(() => (this.window.getNativeWindow() as any).Stripe)\n      )\n      .subscribe((Stripe: any) => {\n        const stripe = this.options\n          ? (Stripe(this.key, this.options) as StripeJS)\n          : (Stripe(this.key) as StripeJS);\n\n        this.stripe$.next(stripe);\n      });\n  }\n\n  public getInstance(): StripeJS | undefined {\n    return this.stripe$.getValue();\n  }\n\n  public elements(options?: ElementsOptions): Observable<Elements> {\n    return this.stripe$.asObservable().pipe(\n      filter(stripe => Boolean(stripe)),\n      map(stripe => (stripe as StripeJS).elements(options)),\n      first()\n    );\n  }\n\n  public createToken(\n    a: Element | Account | BankAccount | Pii,\n    b: CardDataOptions | AccountData | BankAccountData | PiiData | undefined\n  ): Observable<TokenResult> {\n    return this.stripe$.asObservable().pipe(\n      filter(stripe => Boolean(stripe)),\n      switchMap(s => {\n        const stripe = s as StripeJS;\n\n        if (isAccount(a) && isAccountData(b)) {\n          return from(stripe.createToken(a, b));\n        } else if (isBankAccount(a) && isBankAccountData(b)) {\n          return from(stripe.createToken(a, b));\n        } else if (isPii(a) && isPiiData(b)) {\n          return from(stripe.createToken(a, b));\n        } else {\n          return from(\n            stripe.createToken(a as Element, b as CardDataOptions | undefined)\n          );\n        }\n      }),\n      first()\n    );\n  }\n\n  public createSource(\n    a: Element | SourceData,\n    b?: SourceData | undefined\n  ): Observable<SourceResult> {\n    return this.stripe$.asObservable().pipe(\n      filter(stripe => Boolean(stripe)),\n      switchMap(s => {\n        const stripe = s as StripeJS;\n\n        if (isSourceData(a)) {\n          return from(stripe.createSource(a as SourceData));\n        }\n        return from(stripe.createSource(a as Element, b));\n      }),\n      first()\n    );\n  }\n\n  public retrieveSource(source: SourceParams): Observable<SourceResult> {\n    return this.stripe$.asObservable().pipe(\n      filter(stripe => Boolean(stripe)),\n      switchMap(s => {\n        const stripe = s as StripeJS;\n\n        return from(stripe.retrieveSource(source));\n      }),\n      first()\n    );\n  }\n\n  public paymentRequest(options: PaymentRequestOptions) {\n    const stripe = this.getInstance();\n    if (stripe) {\n      return stripe.paymentRequest(options);\n    }\n    return undefined;\n  }\n\n  public handleCardPayment(\n    a: string,\n    b: Element | HandleCardPaymentOptions,\n    c?: HandleCardPaymentOptions | undefined\n  ): Observable<PaymentIntentResult> {\n    return this.stripe$.asObservable().pipe(\n      filter(stripe => Boolean(stripe)),\n      switchMap(s => {\n        const stripe = s as StripeJS;\n\n        if (isHandleCardPaymentOptions(b)) {\n          return from(\n            stripe.handleCardPayment(a as string, b as HandleCardPaymentOptions)\n          );\n        }\n\n        return from(\n          stripe.handleCardPayment(\n            a as string,\n            b as Element,\n            c as HandleCardPaymentOptions | undefined\n          )\n        );\n      })\n    );\n  }\n\n  public handleCardAction(a: string): Observable<PaymentIntentResult> {\n    return this.stripe$.asObservable().pipe(\n      filter(stripe => Boolean(stripe)),\n      switchMap(s => {\n        const stripe = s as StripeJS;\n\n        return from(stripe.handleCardAction(a as string));\n      })\n    );\n  }\n\n  public confirmPaymentIntent(\n    a: string,\n    b?: ConfirmPaymentIntentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe$.asObservable().pipe(\n      filter(stripe => Boolean(stripe)),\n      switchMap(s => {\n        const stripe = s as StripeJS;\n\n        return from(\n          stripe.confirmPaymentIntent(\n            a as string,\n            b as ConfirmPaymentIntentOptions | undefined\n          )\n        );\n      })\n    );\n  }\n\n  public createPaymentMethod(\n    a: string,\n    b: Element,\n    c?: PaymentMethodData | undefined\n  ): Observable<PaymentMethodResult> {\n    return this.stripe$.asObservable().pipe(\n      filter(stripe => Boolean(stripe)),\n      switchMap(s => {\n        const stripe = s as StripeJS;\n\n        return from(stripe.createPaymentMethod(a, b, c));\n      }),\n      first()\n    );\n  }\n\n  public handleCardSetup(\n    a: string,\n    b?: Element | string | PaymentMethodData,\n    c?: PaymentMethodData\n  ): Observable<CardSetupResult> {\n    return this.stripe$.asObservable().pipe(\n      filter(stripe => Boolean(stripe)),\n      switchMap(s => {\n        const stripe = s as StripeJS;\n\n        if (isPaymentMethodData(c)) {\n          return from(\n            stripe.handleCardSetup(\n              a,\n              b as Element,\n              c as PaymentMethodData | undefined\n            )\n          );\n        }\n\n        return from(\n          stripe.handleCardSetup(\n            a,\n            b as string | PaymentMethodData | undefined\n          )\n        );\n      })\n    );\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { WindowRef } from './window-ref.service';\nimport { LazyStripeAPILoader, Status } from './api-loader.service';\n\nimport {\n  STRIPE_PUBLISHABLE_KEY,\n  STRIPE_OPTIONS,\n  Options,\n  StripeJS\n} from '../interfaces/stripe';\nimport { Element } from '../interfaces/element';\nimport { Elements, ElementsOptions } from '../interfaces/elements';\nimport { SourceData, SourceResult, SourceParams } from '../interfaces/sources';\nimport {\n  CardDataOptions,\n  TokenResult,\n  Account,\n  AccountData,\n  BankAccount,\n  BankAccountData,\n  PiiData,\n  Pii\n} from '../interfaces/token';\nimport { StripeInstance } from './stripe-instance.class';\nimport { StripeServiceInterface } from './stripe-instance.interface';\nimport { PaymentRequestOptions } from '../interfaces/payment-request';\nimport { filter, map } from 'rxjs/operators';\nimport {\n  HandleCardPaymentOptions,\n  ConfirmPaymentIntentOptions,\n  PaymentIntentResult,\n  PaymentMethodResult,\n  PaymentMethodData\n} from '../interfaces/payment-intent';\nimport { CardSetupResult } from '../interfaces/card-setup';\n\n@Injectable()\nexport class StripeService implements StripeServiceInterface {\n  public stripe!: StripeInstance;\n\n  constructor(\n    @Inject(STRIPE_PUBLISHABLE_KEY) public key: string,\n    @Inject(STRIPE_OPTIONS) public options: Options,\n    public loader: LazyStripeAPILoader,\n    public window: WindowRef\n  ) {\n    if (key) {\n      this.stripe = new StripeInstance(this.loader, this.window, key, options);\n    }\n  }\n\n  public getStripeReference(): Observable<any> {\n    return this.loader.asStream().pipe(\n      filter((status: Status) => status.loaded === true),\n      map(() => (this.window.getNativeWindow() as any).Stripe)\n    );\n  }\n\n  public getInstance(): StripeJS | undefined {\n    return this.stripe.getInstance();\n  }\n\n  public setKey(key: string, options?: Options) {\n    return this.changeKey(key, options);\n  }\n\n  public changeKey(key: string, options?: Options) {\n    this.stripe = new StripeInstance(this.loader, this.window, key, options);\n\n    return this.stripe;\n  }\n\n  public elements(options?: ElementsOptions): Observable<Elements> {\n    return this.stripe.elements(options);\n  }\n\n  public createToken(\n    a: Element | Account | BankAccount | Pii,\n    b: CardDataOptions | AccountData | BankAccountData | PiiData | undefined\n  ): Observable<TokenResult> {\n    return this.stripe.createToken(a, b);\n  }\n\n  public createSource(\n    a: Element | SourceData,\n    b?: SourceData | undefined\n  ): Observable<SourceResult> {\n    return this.stripe.createSource(a, b);\n  }\n\n  public retrieveSource(source: SourceParams): Observable<SourceResult> {\n    return this.stripe.retrieveSource(source);\n  }\n\n  public paymentRequest(options: PaymentRequestOptions) {\n    return this.stripe.paymentRequest(options);\n  }\n\n  public handleCardPayment(\n    a: string,\n    b?: Element | HandleCardPaymentOptions,\n    c?: HandleCardPaymentOptions | undefined\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.handleCardPayment(a, b, c);\n  }\n\n  public handleCardAction(a: string): Observable<PaymentIntentResult> {\n    return this.stripe.handleCardAction(a);\n  }\n\n  public createPaymentMethod(\n    a: string,\n    b: Element,\n    c?: PaymentMethodData\n  ): Observable<PaymentMethodResult> {\n    return this.stripe.createPaymentMethod(a, b, c);\n  }\n\n  public confirmPaymentIntent(\n    a: string,\n    b?: ConfirmPaymentIntentOptions\n  ): Observable<PaymentIntentResult> {\n    return this.stripe.confirmPaymentIntent(a, b);\n  }\n\n  public handleCardSetup(\n    a: string,\n    b?: string | Element | PaymentMethodData,\n    c?: PaymentMethodData\n  ): Observable<CardSetupResult> {\n    return this.stripe.handleCardSetup(a, b, c);\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport {\n  Options,\n  STRIPE_OPTIONS,\n  STRIPE_PUBLISHABLE_KEY\n} from '../interfaces/stripe';\nimport { LazyStripeAPILoader } from './api-loader.service';\nimport { WindowRef } from './window-ref.service';\nimport { StripeInstance } from './stripe-instance.class';\n\n@Injectable()\nexport class StripeFactoryService {\n  constructor(\n    @Inject(STRIPE_PUBLISHABLE_KEY) public baseKey: string,\n    @Inject(STRIPE_OPTIONS) public baseOptions: string,\n    public loader: LazyStripeAPILoader,\n    public window: WindowRef\n  ) {}\n\n  public create(key: string, options?: Options): StripeInstance {\n    return new StripeInstance(this.loader, this.window, key, options);\n  }\n}\n","import {\n  Component,\n  Input,\n  AfterViewInit,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output\n} from '@angular/core';\n\nimport { BehaviorSubject, Observable, combineLatest } from 'rxjs';\nimport { switchMap, filter } from 'rxjs/operators';\n\nimport {\n  Element as StripeElement,\n  ElementOptions,\n  ElementEventType\n} from '../interfaces/element';\nimport { StripeService } from '../services/stripe.service';\nimport { Elements, ElementsOptions } from '../interfaces/elements';\nimport { StripeInstance } from '../services/stripe-instance.class';\n\n@Component({\n  selector: 'ngx-stripe-card',\n  template: `\n    <div class=\"field\" #stripeCard></div>\n  `\n})\nexport class StripeCardComponent implements AfterViewInit {\n  @Output() public card = new EventEmitter<StripeElement>();\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output()\n  public on = new EventEmitter<{ type: ElementEventType; event: any }>();\n\n  @ViewChild('stripeCard') public stripeCard!: ElementRef;\n  public element!: StripeElement;\n  @Input()\n  public set options(optionsIn: ElementOptions) {\n    this.options$.next(optionsIn);\n  }\n  public options$ = new BehaviorSubject<ElementOptions>({});\n  @Input()\n  public set elementsOptions(optionsIn: ElementsOptions) {\n    this.elementsOptions$.next(optionsIn);\n  }\n  public elementsOptions$ = new BehaviorSubject<ElementsOptions>({});\n  @Input()\n  public set stripe(stripeIn: StripeInstance) {\n    this.stripe$.next(stripeIn);\n  }\n  public stripe$ = new BehaviorSubject<StripeInstance | null>(null);\n\n  constructor(public stripeService: StripeService) {}\n\n  public ngAfterViewInit() {\n    const elements$: Observable<Elements> = combineLatest(\n      this.elementsOptions$.asObservable(),\n      this.stripe$.asObservable()\n    ).pipe(\n      switchMap(([options, stripe]) => {\n        if (stripe) {\n          if (Object.keys(options).length > 0) {\n            return stripe.elements(options);\n          }\n          return stripe.elements();\n        } else {\n          if (Object.keys(options).length > 0) {\n            return this.stripeService.elements(options);\n          }\n          return this.stripeService.elements();\n        }\n      })\n    );\n    combineLatest(\n      elements$,\n      this.options$.asObservable().pipe(filter(options => Boolean(options)))\n    ).subscribe(([elements, options]) => {\n      this.element = elements.create('card', options);\n\n      this.element.on('blur', ev =>\n        this.on.emit({\n          event: ev,\n          type: 'blur'\n        })\n      );\n\n      this.element.on('change', ev =>\n        this.on.emit({\n          event: ev,\n          type: 'change'\n        })\n      );\n\n      this.element.on('click', ev =>\n        this.on.emit({\n          event: ev,\n          type: 'click'\n        })\n      );\n\n      this.element.on('focus', ev =>\n        this.on.emit({\n          event: ev,\n          type: 'focus'\n        })\n      );\n\n      this.element.on('ready', ev =>\n        this.on.emit({\n          event: ev,\n          type: 'ready'\n        })\n      );\n\n      this.element.mount(this.stripeCard.nativeElement);\n\n      this.card.emit(this.element);\n    });\n  }\n\n  public getCard(): StripeElement {\n    return this.element;\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { LazyStripeAPILoader } from './services/api-loader.service';\nimport { StripeService } from './services/stripe.service';\nimport { StripeFactoryService } from './services/stripe-factory.service';\n\nimport { WindowRef } from './services/window-ref.service';\nimport { DocumentRef } from './services/document-ref.service';\n\nimport {\n  Options,\n  STRIPE_OPTIONS,\n  STRIPE_PUBLISHABLE_KEY\n} from './interfaces/stripe';\nimport { StripeCardComponent } from './components/stripe-card.component';\n\n@NgModule({\n  declarations: [StripeCardComponent],\n  exports: [StripeCardComponent]\n})\nexport class NgxStripeModule {\n  public static forRoot(\n    publishableKey?: string,\n    options?: Options\n  ): ModuleWithProviders {\n    return {\n      ngModule: NgxStripeModule,\n      providers: [\n        LazyStripeAPILoader,\n        StripeService,\n        StripeFactoryService,\n        WindowRef,\n        DocumentRef,\n        {\n          provide: STRIPE_PUBLISHABLE_KEY,\n          useValue: publishableKey\n        },\n        {\n          provide: STRIPE_OPTIONS,\n          useValue: options\n        }\n      ]\n    };\n  }\n\n  public static forChild(\n    publishableKey?: string,\n    options?: Options\n  ): ModuleWithProviders {\n    return {\n      ngModule: NgxStripeModule,\n      providers: [\n        LazyStripeAPILoader,\n        StripeService,\n        StripeFactoryService,\n        WindowRef,\n        DocumentRef,\n        {\n          provide: STRIPE_PUBLISHABLE_KEY,\n          useValue: publishableKey\n        },\n        {\n          provide: STRIPE_OPTIONS,\n          useValue: options\n        }\n      ]\n    };\n  }\n}\n"]}