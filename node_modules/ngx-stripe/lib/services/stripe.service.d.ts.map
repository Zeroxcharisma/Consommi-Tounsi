{"version":3,"file":"stripe.service.d.ts","sources":["stripe.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Observable } from 'rxjs';\nimport { WindowRef } from './window-ref.service';\nimport { LazyStripeAPILoader } from './api-loader.service';\nimport { Options, StripeJS } from '../interfaces/stripe';\nimport { Element } from '../interfaces/element';\nimport { Elements, ElementsOptions } from '../interfaces/elements';\nimport { SourceData, SourceResult, SourceParams } from '../interfaces/sources';\nimport { CardDataOptions, TokenResult, Account, AccountData, BankAccount, BankAccountData, PiiData, Pii } from '../interfaces/token';\nimport { StripeInstance } from './stripe-instance.class';\nimport { StripeServiceInterface } from './stripe-instance.interface';\nimport { PaymentRequestOptions } from '../interfaces/payment-request';\nimport { HandleCardPaymentOptions, ConfirmPaymentIntentOptions, PaymentIntentResult, PaymentMethodResult, PaymentMethodData } from '../interfaces/payment-intent';\nimport { CardSetupResult } from '../interfaces/card-setup';\nexport declare class StripeService implements StripeServiceInterface {\n    key: string;\n    options: Options;\n    loader: LazyStripeAPILoader;\n    window: WindowRef;\n    stripe: StripeInstance;\n    constructor(key: string, options: Options, loader: LazyStripeAPILoader, window: WindowRef);\n    getStripeReference(): Observable<any>;\n    getInstance(): StripeJS | undefined;\n    setKey(key: string, options?: Options): StripeInstance;\n    changeKey(key: string, options?: Options): StripeInstance;\n    elements(options?: ElementsOptions): Observable<Elements>;\n    createToken(a: Element | Account | BankAccount | Pii, b: CardDataOptions | AccountData | BankAccountData | PiiData | undefined): Observable<TokenResult>;\n    createSource(a: Element | SourceData, b?: SourceData | undefined): Observable<SourceResult>;\n    retrieveSource(source: SourceParams): Observable<SourceResult>;\n    paymentRequest(options: PaymentRequestOptions): any;\n    handleCardPayment(a: string, b?: Element | HandleCardPaymentOptions, c?: HandleCardPaymentOptions | undefined): Observable<PaymentIntentResult>;\n    handleCardAction(a: string): Observable<PaymentIntentResult>;\n    createPaymentMethod(a: string, b: Element, c?: PaymentMethodData): Observable<PaymentMethodResult>;\n    confirmPaymentIntent(a: string, b?: ConfirmPaymentIntentOptions): Observable<PaymentIntentResult>;\n    handleCardSetup(a: string, b?: string | Element | PaymentMethodData, c?: PaymentMethodData): Observable<CardSetupResult>;\n}\n"]}